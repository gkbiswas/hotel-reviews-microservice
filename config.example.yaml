# Hotel Reviews Microservice Configuration
# This is an example configuration file showing all available options

# Database Configuration
database:
  host: localhost
  port: 5432
  user: hotel_reviews
  password: secure_password
  name: hotel_reviews_db
  ssl_mode: disable
  max_open_conns: 25
  max_idle_conns: 25
  conn_max_lifetime: 5m
  conn_max_idle_time: 5m
  timezone: UTC
  log_level: warn

# AWS S3 Configuration
s3:
  region: us-east-1
  access_key_id: your_access_key
  secret_access_key: your_secret_key
  bucket: hotel-reviews-bucket
  use_ssl: true
  timeout: 30s
  retry_count: 3
  retry_delay: 1s

# Server Configuration
server:
  host: 0.0.0.0
  port: 8080
  read_timeout: 10s
  write_timeout: 10s
  idle_timeout: 60s
  shutdown_timeout: 30s
  enable_cors: true
  enable_gzip: true
  enable_metrics: true
  enable_pprof: false
  # Optional TLS configuration
  # tls_cert_file: /path/to/cert.pem
  # tls_key_file: /path/to/key.pem

# Logging Configuration
log:
  level: info
  format: json
  output: stdout
  enable_caller: true
  enable_stacktrace: false
  # For file output
  # file_path: /var/log/hotel-reviews.log
  # max_size: 100
  # max_backups: 3
  # max_age: 28
  # compress: true

# Cache Configuration (Redis)
cache:
  type: redis
  host: localhost
  port: 6379
  password: ""
  database: 0
  pool_size: 10
  min_idle_conns: 5
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s
  ttl: 1h

# Metrics Configuration
metrics:
  enabled: true
  type: prometheus
  host: localhost
  port: 9090
  path: /metrics
  namespace: hotel_reviews
  service_name: hotel-reviews-api
  environment: development
  version: 1.0.0

# Notification Configuration
notification:
  email:
    enabled: false
    host: smtp.gmail.com
    port: 587
    username: your_email@gmail.com
    password: your_password
    from: Hotel Reviews <noreply@hotelreviews.com>
    use_tls: true
  
  slack:
    enabled: false
    webhook_url: https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
    channel: "#hotel-reviews"
    username: Hotel Reviews Bot
    icon_emoji: ":hotel:"

# File Processing Configuration
processing:
  batch_size: 1000
  worker_count: 4
  max_file_size: 104857600  # 100MB
  processing_timeout: 30m
  max_retries: 3
  retry_delay: 5s
  enable_validation: true
  enable_duplicate_check: true
  temp_directory: /tmp/hotel-reviews

# Security Configuration (Legacy)
security:
  jwt_secret: your_jwt_secret_key_here
  jwt_expiration: 24h
  rate_limit: 1000
  rate_limit_window: 1h
  enable_api_key: false
  api_key_header: X-API-Key
  enable_encryption: false

# Authentication Configuration
auth:
  # JWT Configuration
  jwt_secret: your_super_secret_jwt_key_that_should_be_at_least_32_characters_long
  jwt_issuer: hotel-reviews-api
  access_token_expiry: 15m
  refresh_token_expiry: 7d
  
  # Login Security
  max_login_attempts: 5
  login_attempt_window: 15m
  account_lock_duration: 30m
  
  # Password Policy
  password_min_length: 8
  password_max_length: 128
  require_strong_password: true
  
  # Features
  enable_two_factor: false
  enable_email_verification: false
  enable_password_reset: true
  enable_session_cleanup: true
  session_cleanup_interval: 1h
  enable_audit_logging: true
  enable_rate_limiting: true
  
  # Encryption
  bcrypt_cost: 12
  
  # API Keys
  api_key_length: 32
  api_key_prefix: hr_
  
  # Default Role
  default_role: user

# Kafka Configuration
kafka:
  brokers:
    - localhost:9092
  review_topic: hotel-reviews
  processing_topic: hotel-reviews-processing
  dead_letter_topic: hotel-reviews-dlq
  consumer_group: hotel-reviews-consumer
  batch_size: 100
  batch_timeout: 1s
  max_retries: 3
  retry_delay: 1s
  enable_sasl: false
  enable_tls: false
  max_message_size: 1048576  # 1MB
  compression_type: snappy
  producer_flush_timeout: 10s
  consumer_timeout: 10s
  enable_idempotence: true
  partitions: 3
  replication_factor: 1
  
  # Optional SASL configuration
  # sasl_username: your_username
  # sasl_password: your_password