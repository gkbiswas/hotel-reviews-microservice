version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hotel-reviews-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotel_reviews
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hotel-reviews-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hotel-reviews-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hotel-reviews-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio:latest
    container_name: hotel-reviews-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - hotel-reviews-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client (for bucket creation)
  minio-client:
    image: minio/mc:latest
    container_name: hotel-reviews-minio-client
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - hotel-reviews-network
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb myminio/hotel-reviews-files || true;
      mc anonymous set public myminio/hotel-reviews-files || true;
      echo 'MinIO bucket created';
      exit 0;
      "

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  hotel-reviews-network:
    driver: bridge