# =============================================================================
# Hotel Reviews Microservice - Environment Configuration Example
# =============================================================================
# Copy this file to .env and update the values according to your environment
# DO NOT commit .env file with actual credentials to version control
# =============================================================================

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Application environment (development, staging, production)
APP_ENV=development

# Application name and version
APP_NAME=hotel-reviews-microservice
APP_VERSION=1.0.0

# Application timezone (default: UTC)
APP_TIMEZONE=UTC

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server host address (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
HOTEL_REVIEWS_SERVER_HOST=0.0.0.0

# Server port number
HOTEL_REVIEWS_SERVER_PORT=8080

# Server timeouts (in seconds)
HOTEL_REVIEWS_SERVER_READ_TIMEOUT=15
HOTEL_REVIEWS_SERVER_WRITE_TIMEOUT=15
HOTEL_REVIEWS_SERVER_IDLE_TIMEOUT=60
HOTEL_REVIEWS_SERVER_SHUTDOWN_TIMEOUT=30

# Enable CORS (true/false)
HOTEL_REVIEWS_SERVER_ENABLE_CORS=true

# CORS allowed origins (comma-separated list)
HOTEL_REVIEWS_SERVER_CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# Maximum request body size (in bytes)
HOTEL_REVIEWS_SERVER_MAX_BODY_SIZE=10485760

# Enable request/response compression
HOTEL_REVIEWS_SERVER_ENABLE_COMPRESSION=true

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection settings
HOTEL_REVIEWS_DATABASE_HOST=localhost
HOTEL_REVIEWS_DATABASE_PORT=5432
HOTEL_REVIEWS_DATABASE_USER=postgres
HOTEL_REVIEWS_DATABASE_PASSWORD=postgres
HOTEL_REVIEWS_DATABASE_NAME=hotel_reviews

# SSL mode for database connection (disable, allow, prefer, require, verify-ca, verify-full)
HOTEL_REVIEWS_DATABASE_SSL_MODE=disable

# Database timezone (should match application timezone)
HOTEL_REVIEWS_DATABASE_TIMEZONE=UTC

# Connection pool settings
HOTEL_REVIEWS_DATABASE_MAX_OPEN_CONNS=25
HOTEL_REVIEWS_DATABASE_MAX_IDLE_CONNS=5

# Connection lifetime settings (duration format: 5m, 1h, etc.)
HOTEL_REVIEWS_DATABASE_CONN_MAX_LIFETIME=5m
HOTEL_REVIEWS_DATABASE_CONN_MAX_IDLE_TIME=5m

# Database migration settings
HOTEL_REVIEWS_DATABASE_AUTO_MIGRATE=true
HOTEL_REVIEWS_DATABASE_MIGRATION_PATH=./migrations

# Database logging level (silent, error, warn, info)
HOTEL_REVIEWS_DATABASE_LOG_LEVEL=warn

# Alternative: Use DATABASE_URL for single connection string
# DATABASE_URL=postgresql://postgres:postgres@localhost:5432/hotel_reviews?sslmode=disable

# =============================================================================
# AWS S3 CONFIGURATION
# =============================================================================

# AWS region
HOTEL_REVIEWS_S3_REGION=us-east-1

# AWS credentials (use IAM roles in production instead of access keys)
HOTEL_REVIEWS_S3_ACCESS_KEY_ID=your-access-key-id
HOTEL_REVIEWS_S3_SECRET_ACCESS_KEY=your-secret-access-key

# S3 bucket name for storing review files
HOTEL_REVIEWS_S3_BUCKET=hotel-reviews-bucket

# Custom S3 endpoint (leave empty for AWS S3, set for LocalStack or MinIO)
HOTEL_REVIEWS_S3_ENDPOINT=

# Force path-style addressing (set to true for LocalStack/MinIO)
HOTEL_REVIEWS_S3_FORCE_PATH_STYLE=false

# Use SSL for S3 connections (set to false for LocalStack in development)
HOTEL_REVIEWS_S3_USE_SSL=true

# S3 request timeout (duration format)
HOTEL_REVIEWS_S3_TIMEOUT=30s

# S3 retry configuration
HOTEL_REVIEWS_S3_RETRY_COUNT=3
HOTEL_REVIEWS_S3_RETRY_DELAY=1s

# S3 upload/download part sizes (in bytes)
HOTEL_REVIEWS_S3_UPLOAD_PART_SIZE=5242880
HOTEL_REVIEWS_S3_DOWNLOAD_PART_SIZE=5242880

# S3 presigned URL expiration (duration format)
HOTEL_REVIEWS_S3_PRESIGNED_URL_EXPIRATION=1h

# =============================================================================
# FILE PROCESSING CONFIGURATION
# =============================================================================

# Number of worker goroutines for processing files
HOTEL_REVIEWS_PROCESSING_WORKER_COUNT=4

# Batch size for database operations
HOTEL_REVIEWS_PROCESSING_BATCH_SIZE=1000

# Maximum file size for processing (in bytes)
HOTEL_REVIEWS_PROCESSING_MAX_FILE_SIZE=104857600

# Processing timeout (duration format)
HOTEL_REVIEWS_PROCESSING_TIMEOUT=30m

# Maximum number of retry attempts for failed processing
HOTEL_REVIEWS_PROCESSING_MAX_RETRIES=3

# Delay between retry attempts (duration format)
HOTEL_REVIEWS_PROCESSING_RETRY_DELAY=5s

# Maximum number of concurrent file processing jobs
HOTEL_REVIEWS_PROCESSING_MAX_CONCURRENT_FILES=10

# Worker idle timeout before shutdown (duration format)
HOTEL_REVIEWS_PROCESSING_WORKER_IDLE_TIMEOUT=5m

# Processing metrics collection interval (duration format)
HOTEL_REVIEWS_PROCESSING_METRICS_INTERVAL=30s

# Enable processing status updates in database
HOTEL_REVIEWS_PROCESSING_ENABLE_STATUS_UPDATES=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (debug, info, warn, error)
HOTEL_REVIEWS_LOG_LEVEL=info

# Log format (json, text)
HOTEL_REVIEWS_LOG_FORMAT=json

# Log output (stdout, stderr, file)
HOTEL_REVIEWS_LOG_OUTPUT=stdout

# Log file path (required if output is 'file')
HOTEL_REVIEWS_LOG_FILE_PATH=/var/log/hotel-reviews/app.log

# Log file rotation settings
HOTEL_REVIEWS_LOG_MAX_SIZE=100
HOTEL_REVIEWS_LOG_MAX_BACKUPS=5
HOTEL_REVIEWS_LOG_MAX_AGE=30
HOTEL_REVIEWS_LOG_COMPRESS=true

# Enable caller information in logs
HOTEL_REVIEWS_LOG_ENABLE_CALLER=true

# Enable stack traces in error logs
HOTEL_REVIEWS_LOG_ENABLE_STACKTRACE=false

# =============================================================================
# AUTHENTICATION & AUTHORIZATION
# =============================================================================

# JWT secret key for token signing (generate a secure random string)
HOTEL_REVIEWS_JWT_SECRET=your-super-secret-jwt-key-here

# JWT token expiration time (duration format)
HOTEL_REVIEWS_JWT_EXPIRATION=24h

# JWT refresh token expiration time (duration format)
HOTEL_REVIEWS_JWT_REFRESH_EXPIRATION=7d

# Enable API key authentication
HOTEL_REVIEWS_ENABLE_API_KEY_AUTH=false

# API key for service-to-service authentication
HOTEL_REVIEWS_API_KEY=your-api-key-here

# Enable rate limiting
HOTEL_REVIEWS_ENABLE_RATE_LIMITING=true

# Rate limit requests per minute per IP
HOTEL_REVIEWS_RATE_LIMIT_RPM=1000

# =============================================================================
# CACHE CONFIGURATION (Redis)
# =============================================================================

# Redis connection settings
HOTEL_REVIEWS_REDIS_HOST=localhost
HOTEL_REVIEWS_REDIS_PORT=6379
HOTEL_REVIEWS_REDIS_PASSWORD=
HOTEL_REVIEWS_REDIS_DB=0

# Redis connection pool settings
HOTEL_REVIEWS_REDIS_POOL_SIZE=10
HOTEL_REVIEWS_REDIS_MIN_IDLE_CONNS=5

# Redis timeouts (duration format)
HOTEL_REVIEWS_REDIS_DIAL_TIMEOUT=5s
HOTEL_REVIEWS_REDIS_READ_TIMEOUT=3s
HOTEL_REVIEWS_REDIS_WRITE_TIMEOUT=3s

# Cache TTL settings (duration format)
HOTEL_REVIEWS_CACHE_DEFAULT_TTL=1h
HOTEL_REVIEWS_CACHE_REVIEW_TTL=30m
HOTEL_REVIEWS_CACHE_HOTEL_TTL=2h

# Enable cache
HOTEL_REVIEWS_ENABLE_CACHE=true

# Alternative: Use REDIS_URL for single connection string
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# METRICS & MONITORING
# =============================================================================

# Enable Prometheus metrics
HOTEL_REVIEWS_ENABLE_METRICS=true

# Metrics server port (if different from main server)
HOTEL_REVIEWS_METRICS_PORT=9090

# Metrics endpoint path
HOTEL_REVIEWS_METRICS_PATH=/metrics

# Enable health check endpoints
HOTEL_REVIEWS_ENABLE_HEALTH_CHECKS=true

# Health check endpoints
HOTEL_REVIEWS_HEALTH_PATH=/health
HOTEL_REVIEWS_HEALTH_READY_PATH=/health/ready
HOTEL_REVIEWS_HEALTH_LIVE_PATH=/health/live

# OpenTelemetry configuration
HOTEL_REVIEWS_OTEL_ENABLE=false
HOTEL_REVIEWS_OTEL_ENDPOINT=http://localhost:4317
HOTEL_REVIEWS_OTEL_SERVICE_NAME=hotel-reviews-microservice

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Email notification settings (SMTP)
HOTEL_REVIEWS_SMTP_HOST=smtp.gmail.com
HOTEL_REVIEWS_SMTP_PORT=587
HOTEL_REVIEWS_SMTP_USERNAME=your-email@gmail.com
HOTEL_REVIEWS_SMTP_PASSWORD=your-app-password
HOTEL_REVIEWS_SMTP_FROM_EMAIL=noreply@yourcompany.com
HOTEL_REVIEWS_SMTP_FROM_NAME=Hotel Reviews System

# Enable email notifications
HOTEL_REVIEWS_ENABLE_EMAIL_NOTIFICATIONS=false

# Webhook notification settings
HOTEL_REVIEWS_WEBHOOK_URL=https://your-webhook-endpoint.com/notifications
HOTEL_REVIEWS_WEBHOOK_SECRET=your-webhook-secret
HOTEL_REVIEWS_WEBHOOK_TIMEOUT=10s

# Enable webhook notifications
HOTEL_REVIEWS_ENABLE_WEBHOOK_NOTIFICATIONS=false

# Slack notification settings
HOTEL_REVIEWS_SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
HOTEL_REVIEWS_SLACK_CHANNEL=#alerts

# Enable Slack notifications
HOTEL_REVIEWS_ENABLE_SLACK_NOTIFICATIONS=false

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Third-party API settings for data enrichment
HOTEL_REVIEWS_GOOGLE_PLACES_API_KEY=your-google-places-api-key
HOTEL_REVIEWS_MAPBOX_ACCESS_TOKEN=your-mapbox-token

# Language detection service
HOTEL_REVIEWS_LANGUAGE_DETECTION_API_URL=https://api.detectlanguage.com
HOTEL_REVIEWS_LANGUAGE_DETECTION_API_KEY=your-language-detection-key

# Sentiment analysis service
HOTEL_REVIEWS_SENTIMENT_ANALYSIS_API_URL=https://api.sentiment-analysis.com
HOTEL_REVIEWS_SENTIMENT_ANALYSIS_API_KEY=your-sentiment-api-key

# Enable external service integrations
HOTEL_REVIEWS_ENABLE_LANGUAGE_DETECTION=false
HOTEL_REVIEWS_ENABLE_SENTIMENT_ANALYSIS=false
HOTEL_REVIEWS_ENABLE_LOCATION_ENRICHMENT=false

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Enable debug mode (additional logging and error details)
HOTEL_REVIEWS_DEBUG_MODE=false

# Enable development tools (hot reload, profiling, etc.)
HOTEL_REVIEWS_DEV_MODE=true

# Enable SQL query logging in development
HOTEL_REVIEWS_LOG_SQL_QUERIES=false

# Test database settings (used during testing)
HOTEL_REVIEWS_TEST_DATABASE_NAME=hotel_reviews_test

# Enable test fixtures loading
HOTEL_REVIEWS_LOAD_TEST_FIXTURES=false

# Seed data configuration
HOTEL_REVIEWS_SEED_DATA_PATH=./seeds
HOTEL_REVIEWS_ENABLE_SEED_DATA=false

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Enable HTTPS redirect
HOTEL_REVIEWS_ENABLE_HTTPS_REDIRECT=false

# TLS certificate settings (for HTTPS)
HOTEL_REVIEWS_TLS_CERT_FILE=/path/to/cert.pem
HOTEL_REVIEWS_TLS_KEY_FILE=/path/to/key.pem

# Security headers
HOTEL_REVIEWS_ENABLE_SECURITY_HEADERS=true

# Content Security Policy
HOTEL_REVIEWS_CSP_POLICY="default-src 'self'"

# Enable request ID generation
HOTEL_REVIEWS_ENABLE_REQUEST_ID=true

# Password hashing settings
HOTEL_REVIEWS_BCRYPT_COST=12

# Session settings
HOTEL_REVIEWS_SESSION_SECRET=your-session-secret-key
HOTEL_REVIEWS_SESSION_TIMEOUT=24h

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable specific features
HOTEL_REVIEWS_FEATURE_ASYNC_PROCESSING=true
HOTEL_REVIEWS_FEATURE_BULK_OPERATIONS=true
HOTEL_REVIEWS_FEATURE_EXPORT_FUNCTIONALITY=true
HOTEL_REVIEWS_FEATURE_ADVANCED_SEARCH=true
HOTEL_REVIEWS_FEATURE_ANALYTICS_DASHBOARD=false
HOTEL_REVIEWS_FEATURE_AUTO_TRANSLATION=false

# =============================================================================
# BACKUP & ARCHIVAL
# =============================================================================

# Database backup settings
HOTEL_REVIEWS_BACKUP_ENABLED=false
HOTEL_REVIEWS_BACKUP_SCHEDULE=0 2 * * *
HOTEL_REVIEWS_BACKUP_RETENTION_DAYS=30
HOTEL_REVIEWS_BACKUP_S3_BUCKET=hotel-reviews-backups

# Data archival settings
HOTEL_REVIEWS_ARCHIVAL_ENABLED=false
HOTEL_REVIEWS_ARCHIVAL_RETENTION_MONTHS=12
HOTEL_REVIEWS_ARCHIVAL_S3_BUCKET=hotel-reviews-archive

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# HTTP client timeouts
HOTEL_REVIEWS_HTTP_CLIENT_TIMEOUT=30s
HOTEL_REVIEWS_HTTP_CLIENT_IDLE_CONN_TIMEOUT=90s
HOTEL_REVIEWS_HTTP_CLIENT_MAX_IDLE_CONNS=100

# Memory limits
HOTEL_REVIEWS_MAX_MEMORY_USAGE=1GB
HOTEL_REVIEWS_GC_TARGET_PERCENTAGE=100

# Concurrency limits
HOTEL_REVIEWS_MAX_CONCURRENT_REQUESTS=1000
HOTEL_REVIEWS_MAX_CONCURRENT_DB_CONNECTIONS=50

# =============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================

# Load additional environment-specific configuration
# These files should contain only the variables that differ from defaults
# Example: .env.local, .env.development, .env.staging, .env.production

# Uncomment the following line to load environment-specific overrides
# include .env.${APP_ENV}

# =============================================================================
# NOTES
# =============================================================================
# 
# 1. Duration formats accept: ns, us, ms, s, m, h
#    Examples: 1s, 5m, 2h, 100ms
# 
# 2. Size formats accept: B, KB, MB, GB, TB
#    Examples: 100MB, 1GB, 500KB
# 
# 3. Boolean values: true, false (case-insensitive)
# 
# 4. For production deployments:
#    - Use strong, unique secrets for JWT_SECRET and API_KEY
#    - Enable SSL/TLS for all external connections
#    - Use IAM roles instead of access keys for AWS
#    - Set appropriate log levels (info or warn)
#    - Enable security headers and rate limiting
#    - Use external secret management systems
# 
# 5. For development:
#    - You can use LocalStack for S3 simulation
#    - Set DEBUG_MODE=true for additional logging
#    - Use lower resource limits for testing
# 
# 6. Environment variable precedence:
#    - Command line arguments (highest)
#    - Environment variables
#    - Configuration file
#    - Default values (lowest)
# 
# =============================================================================