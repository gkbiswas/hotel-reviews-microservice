# golangci-lint configuration for Hotel Reviews Microservice
# https://golangci-lint.run/usage/configuration/

run:
  timeout: 10m
  issues-exit-code: 1
  tests: true
  build-tags:
    - integration
    - unit
  skip-dirs:
    - vendor
    - testdata
    - examples
    - docs
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_mock\\.go$"
    - ".*_generated\\.go$"
  modules-download-mode: readonly
  allow-parallel-runners: true

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  cyclop:
    max-complexity: 15
    package-average: 10.0
    skip-tests: false

  dupl:
    threshold: 100

  errcheck:
    check-type-assertions: true
    check-blank: true
    ignore: fmt:.*,io/ioutil:^Read.*
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  errorlint:
    errorf: true
    asserts: true
    comparison: true

  exhaustive:
    check-generated: false
    default-signifies-exhaustive: false

  forbidigo:
    forbid:
      - ^print.*$
      - 'fmt\.Print.*'
      - 'log\.Print.*'
      - 'panic'
      - 'println'
      - 'os\.Exit'
    exclude_godoc_examples: false

  funlen:
    lines: 80
    statements: 50

  gci:
    sections:
      - standard
      - default
      - prefix(github.com/gkbiswas/hotel-reviews-microservice)
    skip-generated: true
    custom-order: true

  gocognit:
    min-complexity: 15

  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: false
    match-constant: true
    numbers: true

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - importShadow
      - unnamedResult
      - unnecessaryBlock

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations
    exclude:
      - "^fixme:"
      - "^todo:"
    period: true
    capital: false

  gofmt:
    simplify: true

  gofumpt:
    lang-version: "1.23"
    extra-rules: true

  goheader:
    values:
      const:
        COMPANY: Hotel Reviews Inc.
      regexp:
        AUTHOR: '.*'
    template: |-
      Copyright (c) {{ YEAR }} {{ COMPANY }}
      SPDX-License-Identifier: MIT
      Author: {{ AUTHOR }}

  goimports:
    local-prefixes: github.com/gkbiswas/hotel-reviews-microservice

  golint:
    min-confidence: 0.8

  gomnd:
    settings:
      mnd:
        checks:
          - argument
          - case
          - condition
          - operation
          - return
          - assign
        ignored-numbers:
          - '0'
          - '1'
          - '2'
          - '3'
          - '10'
          - '100'
          - '1000'
        ignored-functions:
          - strings.SplitN
          - time.Duration
          - context.WithTimeout
          - context.WithDeadline

  gomoddirectives:
    replace-allow-list:
      - launchpad.net/gocheck
    replace-local: true
    exclude-forbidden: false

  gomodguard:
    allowed:
      modules:
        - github.com/gkbiswas/hotel-reviews-microservice
        - github.com/aws/aws-sdk-go-v2
        - github.com/stretchr/testify
        - github.com/gorilla/mux
        - github.com/sirupsen/logrus
        - github.com/redis/go-redis/v9
        - gorm.io/gorm
        - gorm.io/driver/postgres
        - github.com/testcontainers/testcontainers-go
        - github.com/golang-jwt/jwt/v5
        - github.com/google/uuid
        - github.com/pkg/errors
        - github.com/prometheus/client_golang
        - github.com/spf13/viper
        - github.com/spf13/cobra
        - github.com/go-playground/validator/v10
      domains:
        - golang.org
        - google.golang.org
        - go.opentelemetry.io
        - gopkg.in
    blocked:
      modules:
        - github.com/uudashr/go-module:                             "use official go modules"
        - github.com/gofrs/uuid:                                   "use github.com/google/uuid instead"
      versions:
        - github.com/dgrijalva/jwt-go:                             "use github.com/golang-jwt/jwt/v5 instead"
      local_replace_directives: false

  gosec:
    includes:
      - G101 # Look for hard coded credentials
      - G102 # Bind to all interfaces
      - G103 # Audit the use of unsafe block
      - G104 # Audit errors not checked
      - G106 # Audit the use of ssh.InsecureIgnoreHostKey
      - G107 # Url provided to HTTP request as taint input
      - G108 # Profiling endpoint automatically exposed on /debug/pprof
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110 # Potential DoS vulnerability via decompression bomb
      - G201 # SQL query construction using format string
      - G202 # SQL query construction using string concatenation
      - G203 # Use of unescaped data in HTML templates
      - G204 # Audit use of command execution
      - G301 # Poor file permissions used when creating a directory
      - G302 # Poor file permissions used with chmod
      - G303 # Creating tempfile using a predictable path
      - G304 # File path provided as taint input
      - G305 # File traversal when extracting zip/tar archive
      - G306 # Poor file permissions used when writing to a new file
      - G307 # Poor file permissions used when creating a file with os.Create
      - G401 # Detect the usage of DES, RC4, MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)
      - G501 # Import blocklist: crypto/md5
      - G502 # Import blocklist: crypto/des
      - G503 # Import blocklist: crypto/rc4
      - G504 # Import blocklist: net/http/cgi
      - G505 # Import blocklist: crypto/sha1
      - G601 # Implicit memory aliasing of items from a range statement
    excludes:
      - G104 # Temporarily exclude unhandled errors
    config:
      G306: "0644"
      G307: "0644"

  gosimple:
    go: "1.23"
    checks: ["all"]

  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
    enable:
      - atomicalign
      - deepequalerrors
      - fieldalignment
      - findcall
      - nilness
      - reflectvaluecompare
      - shadow
      - sortslice
      - timeformat
      - unusedwrite
    disable:
      - loopclosure

  grouper:
    const-require-single-const: false
    const-require-grouping: true
    import-require-single-import: false
    import-require-grouping: true
    type-require-single-type: false
    type-require-grouping: true
    var-require-single-var: false
    var-require-grouping: true

  importas:
    no-unaliased: true
    no-extra-aliases: true
    alias:
      - pkg: github.com/pkg/errors
        alias: errors
      - pkg: github.com/sirupsen/logrus
        alias: logrus
      - pkg: github.com/stretchr/testify/assert
        alias: assert
      - pkg: github.com/stretchr/testify/require
        alias: require
      - pkg: github.com/stretchr/testify/mock
        alias: mock

  lll:
    line-length: 120
    tab-width: 1

  maligned:
    suggest-new: true

  misspell:
    locale: US
    ignore-words:
      - someword

  nakedret:
    max-func-lines: 30

  nestif:
    min-complexity: 4

  nilnil:
    checked-types:
      - ptr
      - func
      - iface
      - map
      - chan

  nlreturn:
    block-size: 1

  noctx:
    require-reason: true

  nolintlint:
    allow-unused: false
    allow-leading-space: true
    allow-no-explanation: []
    require-explanation: true
    require-specific: true

  prealloc:
    simple: true
    range-loops: true
    for-loops: false

  predeclared:
    ignore: ""
    q: false

  promlinter:
    strict: true
    disabled-linters:
      - "Help"
      - "MetricUnits"
      - "Counter"
      - "HistogramSummaryReserved"
      - "MetricTypeInName"
      - "ReservedChars"
      - "CamelCase"
      - "lintUnitAbbreviations"

  reassign:
    patterns:
      - '.*'

  revive:
    min-confidence: 0.8
    severity: warning
    rules:
      - name: atomic
      - name: line-length-limit
        severity: error
        arguments: [120]
      - name: argument-limit
        severity: warning
        arguments: [5]
      - name: cyclomatic
        severity: warning
        arguments: [15]
      - name: max-public-structs
        severity: warning
        arguments: [20]
      - name: file-header
        severity: warning
        arguments:
          - This file contains the implementation of hotel reviews microservice
      - name: empty-block
      - name: superfluous-else
      - name: confusing-naming
      - name: get-return
      - name: modifies-parameter
      - name: confusing-results
      - name: deep-exit
      - name: unused-parameter
      - name: unused-receiver
      - name: add-constant
        severity: warning
        arguments:
          - maxLitCount: "3"
            allowStrs: '""'
            allowInts: "0,1,2"
            allowFloats: "0.0,0.,1.0,1.,2.0,2."
      - name: flag-parameter
      - name: unnecessary-stmt
      - name: struct-tag
      - name: modifies-value-receiver
      - name: constant-logical-expr
      - name: bool-literal-in-expr
      - name: redefines-builtin-id
      - name: imports-blacklist
        severity: error
        arguments:
          - "crypto/md5"
          - "crypto/sha1"
          - "crypto/rc4"
          - "crypto/des"
      - name: range-val-in-closure
      - name: range-val-address
      - name: waitgroup-by-value
      - name: atomic
      - name: empty-lines
      - name: call-to-gc
      - name: duplicated-imports
      - name: import-shadowing
      - name: bare-return
      - name: unused-result
      - name: unhandled-error
        severity: warning
        arguments:
          - "fmt.Printf"
          - "fmt.Print"
          - "fmt.Println"
      - name: time-naming
      - name: var-naming
      - name: var-declaration
      - name: package-comments
        severity: warning
      - name: exported
        severity: warning
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"
      - name: indent-error-flow
        severity: warning
      - name: if-return
      - name: increment-decrement
      - name: error-return
      - name: error-naming
      - name: error-strings
      - name: receiver-naming
      - name: unreachable-code
      - name: unusedresult

  staticcheck:
    go: "1.23"
    checks: ["all"]

  stylecheck:
    go: "1.23"
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist:
      - fmt
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS"]
    http-status-code-whitelist: ["200", "400", "404", "500"]

  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: camel
        yaml: camel
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab

  testpackage:
    skip-regexp: (export|internal)_test\.go

  thelper:
    test:
      first: true
      name: true
      begin: true
    benchmark:
      first: true
      name: true
      begin: true
    tb:
      first: true
      name: true
      begin: true

  tparallel:
    ignoremissing: false
    ignoremissingsubtests: false

  unparam:
    check-exported: false

  unused:
    check-exported: false
    field-writes-are-uses: true
    post-statements-are-reads: true
    exported-fields-are-used: true
    parameters-are-used: true
    local-variables-are-used: true
    generated-is-used: true

  varnamelen:
    min-name-length: 2
    ignore-type-assert-ok: true
    ignore-map-index-ok: true
    ignore-chan-recv-ok: true
    ignore-names:
      - err
      - id
      - ip
      - db
      - tx
      - ctx
      - req
      - res
      - buf
      - tmp
      - wg
      - mu
      - ch
      - ok
      - fn
      - in
      - out
      - r
      - w
      - v
      - i
      - j
      - k
      - n
      - m
      - s
      - t
      - u
      - x
      - y
      - z
    ignore-decls:
      - c echo.Context
      - t testing.T
      - f *foo.Bar
      - e error
      - i int
      - const C
      - T any
      - m map[string]int

  whitespace:
    multi-if: false
    multi-func: false

  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
    ignoreSigRegexps:
      - \.New.*Error\(
    ignorePackageGlobs:
      - encoding/*
      - github.com/pkg/*

  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-assign-and-anything: false
    allow-multiline-assign: true
    allow-separated-leading-comment: false
    allow-trailing-comment: false
    force-case-trailing-whitespace: 0
    force-err-cuddling: false
    force-short-decl-cuddling: false
    allow-case-trailing-whitespace: true
    allow-cuddle-declarations: false
    allow-assign-and-call: true

linters:
  enable-all: true
  disable:
    # Deprecated linters
    - deadcode
    - exhaustivestruct
    - golint
    - ifshort
    - interfacer
    - maligned
    - nosnakecase
    - scopelint
    - structcheck
    - varcheck
    # Disabled temporarily
    - bodyclose
    - contextcheck
    - depguard
    - dogsled
    - errchkjson
    - execinquery
    - exhaustruct
    - exportloopref
    - forcetypeassert
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - godox
    - ireturn
    - maintidx
    - musttag
    - nilerr
    - nonamedreturns
    - paralleltest
    - rowserrcheck
    - sqlclosecheck
    - testableexamples
    - testifylint
    - unconvert
    - usestdlibvars
    - wastedassign
    - containedctx
    - cyclop
    - dupl
    - err113
    - gci
    - gofumpt
    - goheader
    - gomnd
    - gomoddirectives
    - gomodguard
    - grouper
    - importas
    - lll
    - nlreturn
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - tagliatelle
    - testpackage
    - thelper
    - tparallel
    - varnamelen
    - whitespace
    - wrapcheck
    - wsl

issues:
  max-issues-per-linter: 50
  max-same-issues: 10
  new: false
  new-from-rev: ""
  new-from-patch: ""
  whole-files: false
  fix: false

  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
        - gocognit
        - gomnd
        - lll
        - unparam
        - unused

    # Exclude some linters from running on example files
    - path: examples/
      linters:
        - errcheck
        - gosec
        - goconst
        - gomnd
        - unused

    # Exclude some linters from running on generated files
    - path: ".*\\.pb\\.go$"
      linters:
        - gocritic
        - gocyclo
        - errcheck
        - gosec
        - goconst
        - gomnd
        - lll
        - maligned
        - unparam
        - unused

    # Exclude some linters from running on mock files
    - path: ".*_mock\\.go$"
      linters:
        - errcheck
        - gosec
        - goconst
        - gomnd
        - unused

    # Exclude some gosec messages
    - linters:
        - gosec
      text: "G204: Subprocess launched with"

    # Exclude some gocritic messages
    - linters:
        - gocritic
      text: "unnecessaryDefer:"

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude some unused messages
    - linters:
        - unused
      text: "`.*` is unused"

  exclude-use-default: false
  exclude-case-sensitive: false
  include:
    - EXC0002 # disable excluding of issues about comments from golint
    - EXC0003 # disable excluding of issues about comments from revive
    - EXC0004 # disable excluding of issues about comments from stylecheck
    - EXC0005 # disable excluding of issues about comments from staticcheck
    - EXC0011 # disable excluding of issues about comments from typecheck
    - EXC0012 # disable excluding of issues about comments from revive
    - EXC0013 # disable excluding of issues about comments from revive
    - EXC0014 # disable excluding of issues about comments from revive
    - EXC0015 # disable excluding of issues about comments from revive

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - gocritic
      severity: info
    - linters:
        - gomnd
      severity: info
    - linters:
        - goconst
      severity: info
    - linters:
        - lll
      severity: info